#!/usr/bin/python

import acg

def print_tag(tag):
	print "Found %s tag with serial 0x%s"%(tag.typename, tag.serial_str)
	if tag.type == tag.TAG_TYPE_ISO_1443A:
		clevel = {
				tag.CASCADE_LEVEL1: 1,
				tag.CASCADE_LEVEL2: 2,
				tag.CASCADE_LEVEL3: 3,
			}
		if clevel.has_key(tag.cascade):
			print "  Cascade level %u"%clevel[tag.cascade]
	elif tag.type == tag.TAG_TYPE_ISO_1443B:
		return

def do_continuous(card):
	prev_tag = None
	while True:
		try:
			#tag = card.select()
			tag = card.continuous_read()
			if not tag:
				return
		except acg.ACG_Exception, e:
			print e.msg
			return
		if not prev_tag or tag.serial != prev_tag.serial:
			print_tag(tag)
		prev_tag = tag

def do_multiselect(card):
	try:
		tags = card.multi_select()
	except acg.ACG_Exception, e:
		print e.msg
		return
	for tag in tags:
		card.select(tag)
		print_tag(tag)
	print

def do_select(card):
	try:
		tag = card.select()
	except acg.ACG_Exception, e:
		print e.msg
		return
	print_tag(tag)

if __name__ == '__main__':
	for dev in acg.get_devlist():
		print dev.vendor
		print dev.product
		print "%s @ %u baud"%(dev.tty, dev.suggested_baud)
		try:
			card = acg.acg(line=dev.tty,
					baud = dev.suggested_baud,
					tracefile="acgtool.trace")
		except acg.ACG_Exception, e:
			print "ERROR: %s"%e.msg
			print
			continue

		#do_select(card)
		do_multiselect(card)
		#do_continuous(card)

